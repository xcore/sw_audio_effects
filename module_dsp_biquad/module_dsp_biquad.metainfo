-------------------------------------------------------------------------------
-- Descriptive metadata
-------------------------------------------------------------------------------

componentName = "BiQuad Filter"
componentFullName = "Configurable BiQuad Filter Function Library"
alternativeNames = { }
componentDescription = ""
componentVersion = "1v0"

-------------------------------------------------------------------------------
-- Parameter descriptions.
-------------------------------------------------------------------------------
LO_PASS=0
HI_PASS=1
BAND_PASS=2
BAND_STOP=3
ALL_PASS=4

configPoints =
{
  SampleFreq = {
    short   = "Sample Frequency",
    help    = "",
    long    = "",
    units   = "Hz",
    define  = "DEF_SAMP_FREQ",
    type    = "int",
    options = {32000,44100,48000,88200,96000,176400,192000},
    resourceUsageFlags = {"linear"},
    default = 48000
  },
  NumChannels = {
    short   = "BiQuad Channels",
    help    = "Number of audio channels processed in parallel, Currently set in app_conf.h",
    long    = "192kHz CAN ONLY ACCOMODATE ONE CHANNEL, 44 OR 48kHz COULD ACCOMODATE 4",
    units   = "",
    define  = "NUM_BIQUAD_CHANS",
    type    = "int",
    options = {1,2,4},
    resourceUsageFlags = {"linear"},
    default = 4 
  },
  FilterType =
  {
    short   = "Filter Type",
    help    = "Custom filters can be defined. To get started with custom definition, select the type closest to your requirements. NB ALL_PASS changes phase",
    long    = "",
    units   = "",
    define  = "DEF_FILT_MODE",
    type    = "int",
    options = {LO_PASS,HI_PASS,BAND_PASS,BAND_STOP,ALL_PASS}, 
    resourceUsageFlags = {"noeffect"},
    default = LO_PASS
  },
  SignificantFreq = {
    short   = "Significant Frequency",
    help    = "The significant frequency for the filter type. E.g Cut-off Freq. for Low-Pass. Note that this is specified in Hz, not KHz",
    long    = "",
    units   = "Hz",
    define  = "DEF_SIG_FREQ",
    type    = "int",
     min     = 20,
    max     = 20000,
    resourceUsageFlags = {"noeffect"},
    default = 1000
  },
  QualityFactor = {
    short   = "Quality Factor",
    help    = "Filter resonance, Small Nos: Low resonance(wide peak), Large Nos: High resonance(narrow peak)",
    long    = "",
    units   = "Hz",
    define  = "DEF_QUAL_FACT",
    type    = "int",
    min     = 2^(-8),
    max     = 2^23,
    resourceUsageFlags = {"noeffect"},
    default = 1
  },
}

derivedValues = {}

ports = {
}

channels = {
}        

function getConfigStatus()
  local status = "Valid Configuration"
  local issues = {}
  if swblock.params.SampleFreq > 96000 and swblock.params.NumChans > 1 then
    status = "Invalid Configuration" 
    table.insert(issues, { issues = "176400 or 192000 kHz can only support one channel", suggestion = "Reduce Sample Rate"}) 
  elseif swblock.params.SampleFreq > 48000 and swblock.params.NumChans > 2 then
    status = "Invalid Configuration" 
    table.insert(issues, { issues = "88200 or 96000 kHz can only support one or two channels", suggestion = "Reduce Sample Rate"}) 
  end
  return status, issues
end
            
-------------------------------------------------------------------------------
-- Source generation functions
-------------------------------------------------------------------------------

generatedCode = {
  includes =  { "biquad_simple.h" },
  globals = "",
  body = ""
}

api = {'use_biquad_filter','config_biquad_filter'}

files = {["module_dsp_biquad/dsp_biquad_conf_example.h"] = "src/dsp_biquad_conf.h"}
